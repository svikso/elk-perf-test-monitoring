version: '3.8'


volumes:
  certs:
    driver: local
  es_data:
    driver: local
  kibana_data:
    driver: local
  grafana_data:
    driver: local


networks:
  default:
    name: elk
    external: false


services:
  setup:
    container_name: elk_setup
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./setup/:/setup/
      - ./secrets:/secrets
    user: "0"
    command: bash /setup/setup.sh
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - LOGSTASH_WRITER_USER=${LOGSTASH_USER}      
      - LOGSTASH_WRITER_PASSWORD=${LOGSTASH_PASSWORD}
      - LOGSTASH_READER_USER=${ELASTIC_GRAFANA_USER}
      - LOGSTASH_READER_PASSWORD=${ELASTIC_GRAFANA_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - EXTERNAL_IP=${EXTERNAL_IP}
      - EXTERNAL_HOST=${EXTERNAL_HOST}
      - ES_URL=https://${ES_HOST}:${ES_PORT}
      - USE_EXTERNAL_CERT=${USE_EXTERNAL_CERT}
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es/es.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es:
    container_name: elk_es
    depends_on:
      - setup
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    labels:
      svikso.com.github/module: elasticsearch
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - es_data:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es
      - cluster.name=elk_perfmon
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es/es.key
      - xpack.security.http.ssl.certificate=certs/es/es.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es/es.key
      - xpack.security.transport.ssl.certificate=certs/es/es.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - ES_JAVA_OPTS=-Xmx${ES_HEAP} -Xms${ES_HEAP}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    container_name: elk_kibana
    depends_on:
      es:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    labels:
      svikso.com.github/module: kibana
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibana_data:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://${ES_HOST}:${ES_PORT}
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - xpack.fleet.agents.enabled=false
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    container_name: elk_logstash
    depends_on:
      es:
        condition: service_healthy
    labels:
      svikso.com.github/module: logstash
    user: root
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    volumes:
      - certs:/usr/share/logstash/certs
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      - xpack.monitoring.enabled=false
      - SERVERNAME=logstash
      - ELASTICSEARCH_HOSTS=https://${ES_HOST}:${ES_PORT}
      - ELASTICSEARCH_USERNAME=es_logstash
      - ELASTICSEARCH_PASSWORD=${LOGSTASH_PASSWORD}
      - LS_JAVA_OPTS=-Xmx${LOGSTASH_HEAP} -Xms${LOGSTASH_HEAP}
    healthcheck:
      test: bin/logstash -t
      interval: 60s
      timeout: 50s
      retries: 120

  grafana:
    image: grafana/grafana:10.0.3-ubuntu
    container_name: elk_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - certs:/var/lib/certs
      - ./grafana/datasource-providers:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard-providers:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana-dashboards
    ports:
      - "3000:3000"
    environment:
      - GF_LOG_LEVEL=info
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - ELASTICSEARCH_HOSTS=https://${ES_HOST}:${ES_PORT}
      - ELASTIC_GRAFANA_USER=${ELASTIC_GRAFANA_USER}
      - ELASTIC_GRAFANA_PASSWORD=${ELASTIC_GRAFANA_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=true
    depends_on:
      es:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:3000/healthz | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  haproxy:
    image: haproxy:2.8.2
    container_name: elk_haproxy
    volumes:
      - ./secrets/external:/etc/ssl/certs
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "443:443"
      - "8443:8443"
    depends_on:
      - grafana
